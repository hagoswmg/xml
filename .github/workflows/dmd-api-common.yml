name: DMD-API-COMMON CI/CD Pipeline Testing 
on:
  push:
    branches:
      - main

jobs:
  build:

    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      - name: Upload JAR
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: target/dmdapicommon-0.0.1-SNAPSHOT.jar

  init:
    name: Init
    environment: development
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.setvars.outputs.branch_name }}
    steps:
      - name: Set branch name
        id: setvars
        run: echo "::set-output name=branch_name::${GITHUB_REF##*/}"
      - name: Set Database Parameters
        run: |
          echo "APPLICATION_PORT=$(echo ${{secrets.PORT}})" >> $GITHUB_ENV
          echo "DB_URL=$(echo ${{secrets.DB_URL}})" >> $GITHUB_ENV
          echo "DB_USERNAME=$(echo ${{secrets.DB_USERNAME}})" >> $GITHUB_ENV
          echo "DB_PASSWORD=$(echo ${{secrets.DB_PASSWORD}})" >> $GITHUB_ENV
          
          echo "APPLICATION_PORT = ${{ env.PORT }}"
          echo "DB_URL = ${{ env.DB_URL }}"
          echo "DB_USERNAME = ${{ env.DB_USERNAME }}"
          echo "DB_PASSWORD = ${{ env.DB_PASSWORD }}"

  deploy:
    name: Deploy
    environment: development
    needs: [build, init]
    runs-on: ubuntu-latest

    steps:
    
      - name: Download JAR
        uses: actions/download-artifact@v2
        with:
          name: artifact

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-west-1"

      - name: Upload package to S3 bucket
        run: aws s3 cp dmdapicommon-0.0.1-SNAPSHOT.jar s3://xml-deployment-s3-bucket/

      - name: Create New ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name dmdapicommon \
          --auto-create-application \
          --source-bundle S3Bucket="xml-deployment-s3-bucket",S3Key="dmdapicommon-0.0.1-SNAPSHOT.jar" \
          --version-label "ver-${{ github.sha }}" \
          --description "commit-sha-${{ github.sha }}"

      - name: Deploy New ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk create-environment \
          --application-name dmdapicommon \
          --environment-name dmdapicommon-env-1 \
          --solution-stack-name "64bit Amazon Linux 2 v3.2.16 running Corretto 11" \
          --option-settings '[{"Namespace":"aws:autoscaling:launchconfiguration","OptionName":"IamInstanceProfile","Value":"aws-elasticbeanstalk-ec2-role"},{"OptionName":"AWS_REGION","Namespace":"aws:elasticbeanstalk:application:environment","Value":"${{ secrets.AWS_REGION }}"},{"OptionName":"AWS_ACCESS_KEY","Namespace":"aws:elasticbeanstalk:application:environment","Value":"${{ secrets.AWS_ACCESS_KEY_ID }}"},{"OptionName":"AWS_SECRET_KEY","Namespace":"aws:elasticbeanstalk:application:environment","Value":"${{ secrets.AWS_SECRET_ACCESS_KEY }}"}]' \
          --version-label "ver-${{ github.sha }}"
